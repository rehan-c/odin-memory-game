{"ast":null,"code":"var _jsxFileName = \"/home/rehan/javascript/javascript-intermediate/react/odin-memory-game/src/components/CardContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport jimmy from '../images/jimmy.png';\nimport chuck from '../images/chuck.png';\nimport tuco from '../images/tuco.png';\nimport curry from '../images/curry.jpg';\nimport hotpot from '../images/hotpot.jpg';\nimport matcha from '../images/matcha.jpg';\nimport lalo from '../images/lalo.png';\nimport mike from '../images/mike.png';\nimport gustavo from '../images/gustavo.png';\nimport chickenRice from '../images/chicken-rice.png';\nimport nacho from '../images/nacho.png';\nimport howard from '../images/howard.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CardContainer(props) {\n  _s();\n\n  const {\n    handleGameLogic,\n    score,\n    highScore\n  } = props;\n  let images = [{\n    src: jimmy,\n    title: 'Jimmy',\n    backgroundColor: 'rgb(52 52 60)',\n    borderStyle: '1px solid rgb(52 52 60)'\n  }, {\n    src: chuck,\n    title: 'Chuck',\n    backgroundColor: 'rgb(52 52 60)',\n    borderStyle: '1px solid rgb(52 52 60)'\n  }, {\n    src: howard,\n    title: 'Howard',\n    backgroundColor: 'rgb(52 52 60)',\n    borderStyle: '1px solid rgb(52 52 60)'\n  }, {\n    src: lalo,\n    title: 'Lalo',\n    backgroundColor: 'rgb(52 52 60)',\n    borderStyle: '1px solid rgb(52 52 60)'\n  }, {\n    src: gustavo,\n    title: 'Gustavo',\n    backgroundColor: 'rgb(52 52 60)',\n    borderStyle: '1px solid rgb(52 52 60)'\n  }, {\n    src: tuco,\n    title: 'Tuco',\n    backgroundColor: 'rgb(52 52 60)',\n    borderStyle: '1px solid rgb(52 52 60)'\n  }, {\n    src: nacho,\n    title: 'Nacho',\n    backgroundColor: 'rgb(52 52 60)',\n    borderStyle: '1px solid rgb(52 52 60)'\n  }, {\n    src: sushi,\n    title: 'Mike',\n    backgroundColor: 'rgb(52 52 60)',\n    borderStyle: '1px solid rgb(52 52 60)'\n  }, {\n    src: chickenRice,\n    title: 'Hector',\n    backgroundColor: 'rgb(52 52 60)',\n    borderStyle: '1px solid rgb(52 52 60)'\n  }, {\n    src: matcha,\n    title: 'Bolsa',\n    backgroundColor: 'rgb(52 52 60)',\n    borderStyle: '1px solid rgb(52 52 60)'\n  }, {\n    src: curry,\n    title: 'Eladio',\n    backgroundColor: 'rgb(52 52 60)',\n    borderStyle: '1px solid rgb(52 52 60)'\n  }, {\n    src: hotpot,\n    title: 'Huell',\n    backgroundColor: 'rgb(52 52 60)',\n    borderStyle: '1px solid rgb(52 52 60)'\n  }];\n  const [cards, setNewCards] = useState(images);\n\n  const shuffle = newCards => {\n    for (let i = newCards.length - 1; i > 0; i--) {\n      let randomIdx = Math.floor(Math.random() * i);\n      [newCards[randomIdx], newCards[i]] = [newCards[i], newCards[randomIdx]];\n    }\n  };\n\n  useEffect(() => {\n    const newCards = [...cards];\n    shuffle(newCards);\n    setNewCards(newCards);\n  }, [score, highScore]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n      card: card,\n      handleGameLogic: handleGameLogic\n    }, card.title, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n\n_s(CardContainer, \"UF6Ev3KQ8ATIVEnrblnyR5bV7n4=\");\n\n_c = CardContainer;\nexport default CardContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardContainer\");","map":{"version":3,"names":["React","useState","useEffect","Card","jimmy","chuck","tuco","curry","hotpot","matcha","lalo","mike","gustavo","chickenRice","nacho","howard","CardContainer","props","handleGameLogic","score","highScore","images","src","title","backgroundColor","borderStyle","sushi","cards","setNewCards","shuffle","newCards","i","length","randomIdx","Math","floor","random","map","card"],"sources":["/home/rehan/javascript/javascript-intermediate/react/odin-memory-game/src/components/CardContainer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport jimmy from '../images/jimmy.png';\nimport chuck from '../images/chuck.png';\nimport tuco from '../images/tuco.png';\nimport curry from '../images/curry.jpg';\nimport hotpot from '../images/hotpot.jpg';\nimport matcha from '../images/matcha.jpg';\nimport lalo from '../images/lalo.png';\nimport mike from '../images/mike.png';\nimport gustavo from '../images/gustavo.png';\nimport chickenRice from '../images/chicken-rice.png';\nimport nacho from '../images/nacho.png';\nimport howard from '../images/howard.png';\n\nfunction CardContainer(props) {\n  const { handleGameLogic, score, highScore } = props;\n\n  let images = [\n    {\n      src: jimmy,\n      title: 'Jimmy',\n      backgroundColor: 'rgb(52 52 60)',\n      borderStyle: '1px solid rgb(52 52 60)',\n    },\n    {\n      src: chuck,\n      title: 'Chuck',\n      backgroundColor: 'rgb(52 52 60)',\n      borderStyle: '1px solid rgb(52 52 60)',\n    },\n    {\n      src: howard,\n      title: 'Howard',\n      backgroundColor: 'rgb(52 52 60)',\n      borderStyle: '1px solid rgb(52 52 60)',\n    },\n    {\n      src: lalo,\n      title: 'Lalo',\n      backgroundColor: 'rgb(52 52 60)',\n      borderStyle: '1px solid rgb(52 52 60)',\n    },\n    {\n      src: gustavo,\n      title: 'Gustavo',\n      backgroundColor: 'rgb(52 52 60)',\n      borderStyle: '1px solid rgb(52 52 60)',\n    },\n    {\n      src: tuco,\n      title: 'Tuco',\n      backgroundColor: 'rgb(52 52 60)',\n      borderStyle: '1px solid rgb(52 52 60)',\n    },\n    {\n      src: nacho,\n      title: 'Nacho',\n      backgroundColor: 'rgb(52 52 60)',\n      borderStyle: '1px solid rgb(52 52 60)',\n    },\n    {\n      src: sushi,\n      title: 'Mike',\n      backgroundColor: 'rgb(52 52 60)',\n      borderStyle: '1px solid rgb(52 52 60)',\n    },\n    {\n      src: chickenRice,\n      title: 'Hector',\n      backgroundColor: 'rgb(52 52 60)',\n      borderStyle: '1px solid rgb(52 52 60)',\n    },\n    {\n      src: matcha,\n      title: 'Bolsa',\n      backgroundColor: 'rgb(52 52 60)',\n      borderStyle: '1px solid rgb(52 52 60)',\n    },\n    {\n      src: curry,\n      title: 'Eladio',\n      backgroundColor: 'rgb(52 52 60)',\n      borderStyle: '1px solid rgb(52 52 60)',\n    },\n    {\n      src: hotpot,\n      title: 'Huell',\n      backgroundColor: 'rgb(52 52 60)',\n      borderStyle: '1px solid rgb(52 52 60)',\n    },\n  ];\n\n  const [cards, setNewCards] = useState(images);\n\n  const shuffle = (newCards) => {\n    for (let i = newCards.length - 1; i > 0; i--) {\n      let randomIdx = Math.floor(Math.random() * i);\n      [newCards[randomIdx], newCards[i]] = [newCards[i], newCards[randomIdx]];\n    }\n  };\n\n  useEffect(() => {\n    const newCards = [...cards];\n    shuffle(newCards);\n    setNewCards(newCards);\n  }, [score, highScore]);\n\n  return (\n    <>\n      {cards.map((card) => (\n        <Card card={card} key={card.title} handleGameLogic={handleGameLogic} />\n      ))}\n    </>\n  );\n}\n\nexport default CardContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}